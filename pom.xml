<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.5icodes</groupId><!--https://docs.oracle.com/javase/tutorial/java/package/namingpkgs.html-->
    <artifactId>starter</artifactId>
    <packaging>pom</packaging>
    <version>${starter.version}</version>
    <modules>
        <module>apollo</module>
        <module>async</module>
        <module>cache</module>
        <module>cache-monitor</module>
        <module>cache-stress</module>
        <module>common</module>
        <module>demo</module>
        <module>drools</module>
        <module>eureka</module>
        <module>feign</module>
        <module>feign-stress</module>
        <module>gray</module>
        <module>jasypt</module>
        <module>jdbc</module>
        <module>kafka</module>
        <module>log</module>
        <module>monitor</module>
        <module>redisson</module>
        <module>rocketmq</module>
        <module>saturn</module>
        <module>sentinel</module>
        <module>sharding</module>
        <module>sleuth</module>
        <module>stress</module>
        <module>swagger</module>
        <module>web</module>
        <module>webflux</module>
        <module>webmvc</module>
    </modules>

    <properties>
        <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <java.version>1.8</java.version>
        <starter.version>0.0.1</starter.version>
        <spring-cloud.version>2021.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <jackson.version>2.13.2</jackson.version>
        <hutool.version>5.3.1</hutool.version>
        <sentinel.version>1.8.2</sentinel.version>
        <jetcache.version>2.6.4</jetcache.version>
        <apollo.version>1.8.0</apollo.version>
        <guava.version>30.0-jre</guava.version>
        <curator.version>2.13.0</curator.version>
        <druid.version>1.1.20</druid.version>
        <sharding-jdbc.version>2.0.0</sharding-jdbc.version>
        <log4j.version>2.17.1</log4j.version>
        <powermock.version>2.0.0</powermock.version>
        <kie.version>7.53.0.Final</kie.version>
        <mapstruct.version>1.5.2.Final</mapstruct.version>
        <lombok.version>1.18.24</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!-- lombok dependencies should not end up on classpath -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>apollo</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>async</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>cache</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>cache-monitor</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>cache-stress</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>common</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>drools</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>eureka</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>feign</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>feign-stress</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>gray</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>jasypt</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>jdbc</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>kafka</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>log</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>monitor</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>redisson</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>rocketmq</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>saturn</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>sentinel</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>sharding</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>sleuth</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>stress</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>swagger</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>web</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>webflux</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.5icodes</groupId>
                <artifactId>webmvc</artifactId>
                <version>${starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-spring</artifactId>
                <version>${kie.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.7</version>
            </dependency>

            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>3.4.2</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-redis-springdata</artifactId>
                <version>${jetcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis</artifactId>
                <version>${jetcache.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alicp.jetcache</groupId>
                        <artifactId>jetcache-redis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>redis.clients</groupId>
                        <artifactId>jedis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>4.0.2</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.0</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.4.1</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.0.1</version>
            </dependency>

            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>2.1.5</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis-spring</artifactId>
                    </exclusion>
                    <!-- The Java Persistence API (JPA), in 2019 renamed to Jakarta Persistence -->
                    <exclusion>
                        <groupId>javax.persistence</groupId>
                        <artifactId>persistence-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.shardingjdbc</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>${sharding-jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>1.7.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>4.3.0</version>
            </dependency>

            <dependency>
                <groupId>com.github.kstyrc</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>0.6</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-apollo</artifactId>
                <version>${sentinel.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.csp</groupId>
                        <artifactId>sentinel-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.ctrip.framework.apollo</groupId>
                        <artifactId>apollo-client</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.alibaba.csp</groupId>
                        <artifactId>sentinel-datasource-extension</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-annotation-aspectj</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-web-servlet</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-transport-simple-http</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-parameter-flow-control</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-extension</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}-${project.version}-${starter.build.time}</finalName>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <name>starter.build.time</name>
                    <pattern>yyyyMMddHHmmss</pattern>
                    <locale>zh_CN</locale>
                    <timeZone>GMT+8</timeZone>
                    <fileSet/>
                    <regex/>
                    <source/>
                    <value/>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId><!--https://maven.apache.org/maven-ci-friendly.html-->
                <version>1.1.0</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- See https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
                    <!-- Classpath elements to supply as annotation processor path. If specified, the compiler   -->
                    <!-- will detect annotation processors only in those classpath elements. If omitted, the     -->
                    <!-- default classpath is used to detect annotation processors. The detection itself depends -->
                    <!-- on the configuration of annotationProcessors.                                           -->
                    <!--                                                                                         -->
                    <!-- According to this documentation, the provided dependency processor is not considered!   -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <!-- 编译时输出mapstruct的详细信息 -->
                        <arg>-Amapstruct.verbose=true</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>